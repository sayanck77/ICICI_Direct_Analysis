ICICI DIRECT ANALYSIS SCRIPT - CODE REVIEW REPORT
=================================================
Date: September 26, 2025
Lines Analyzed: 1-922
File: All_in_One - Copy copy.ipynb

====================
1. POTENTIAL PYLANCE/TYPE WARNINGS
====================

1.1 REMAINING DATAFRAME ITERATION WARNING (Line ~490):
   - Location: write_inv_cur_portfio() function
   - Issue: "for index, row in cur_df["stock_code"].items():"
   - Problem: Same .items() iteration issue that creates Hashable type warnings
   - Fix Required: Convert to integer-based iteration like other functions

1.2 MISSING FILE PATH LOGIC ISSUE (Line ~155):
   - Location: setup_isec_login() function
   - Issue: Missing else clause when file doesn't exist
   - Problem: If timestamp_file doesn't exist, s_token is undefined
   - Current Code: Only handles if file exists, no fallback for missing file
   - Logic Error: Script will fail if timestamp file doesn't exist initially

1.3 VARIABLE SHADOWING WARNING (Line ~915):
   - Location: send_email() function  
   - Issue: Variable "time_now" is reused/reassigned
   - Problem: "time_now = datetime.now()" then "time_now = time_now.strftime(...)"
   - Better Practice: Use different variable names for datetime object vs string

====================
2. LOGIC ERRORS & POTENTIAL ISSUES
====================

2.1 CRITICAL: UNDEFINED VARIABLE ACCESS (Line ~491):
   - Location: write_inv_cur_portfio() function calls extracting_cur_portfolio_icicidirect(isec)
   - Problem: Variable 'isec' is used but may not be defined at module level
   - Issue: 'isec' is only defined inside setup_isec_login() function scope
   - Risk: NameError if function called before isec is properly initialized

2.2 GLOBAL VARIABLE INITIALIZATION BUG (Line ~38-46):
   - Issue: Multiple undefined global variables declared but never initialized
   - Variables: current_price, s_token, inv_df, pos_df, ema_rsi_df
   - Problem: These are declared as global but never given initial values
   - Risk: NameError when first accessed if not properly initialized

2.3 FILE HANDLE LEAK (Line ~403):
   - Location: save_sessionkey_date() function
   - Issue: Unnecessary f.close() call after 'with' statement
   - Problem: 'with' statement already handles file closing
   - Minor Issue: Redundant code, but not harmful

2.4 BROAD EXCEPTION HANDLING (Multiple locations):
   - Line ~515: "except:" without specific exception type
   - Line ~751: "except:" without specific exception type  
   - Line ~767: "except:" without specific exception type
   - Problem: Catches all exceptions, making debugging difficult
   - Risk: May hide important errors and make troubleshooting harder

2.5 VARIABLE REUSE CONFUSION (Line ~825-826):
   - Location: write_pos_values_inv() function
   - Issue: Variable name confusion with time formatting
   - Code: "time_now = datetime.now()" then "time_now = time_now.strftime(...)"
   - Problem: Same variable used for datetime object then string
   - Clarity Issue: Reduces code readability

2.6 HARDCODED CREDENTIALS EXPOSURE (Line ~66 & 425):
   - Location: USERNAME constant and isec_login() function
   - Issue: API keys and secrets are hardcoded in source code
   - Security Risk: Sensitive credentials visible in code
   - Best Practice: Should use environment variables or secure config files

2.7 POTENTIAL DIVISION BY ZERO (Line ~735):
   - Location: cross_over_signal_data() function
   - Issue: "rs = avg_gain / avg_loss"
   - Problem: avg_loss could potentially be zero
   - Risk: ZeroDivisionError if all price movements are positive

2.8 MISSING ERROR HANDLING FOR DATAFRAME OPERATIONS:
   - Various locations with DataFrame column access
   - Issue: No validation that required columns exist
   - Problem: KeyError if expected columns are missing from Excel files
   - Risk: Script crashes if Excel file structure changes

====================
3. PERFORMANCE & DESIGN ISSUES
====================

3.1 INEFFICIENT NESTED LOOPS:
   - Line ~493-498: Nested loops in write_inv_cur_portfio()
   - Line ~817-821: Nested loops in write_to_inv_D() 
   - Line ~884-888: Nested loops in write_pos_values_inv()
   - Problem: O(nÂ²) complexity for matching operations
   - Suggestion: Use pandas merge operations for better performance

3.2 REPEATED FILE OPERATIONS:
   - Multiple functions open/save the same Excel file
   - Problem: Inefficient I/O operations
   - Suggestion: Batch operations where possible

3.3 MAGIC NUMBERS:
   - Line ~25, 30: Wait times (25 seconds) hardcoded
   - Line ~735: RSI calculation values (1, 2, 100) without constants
   - Problem: No explanation for specific values
   - Suggestion: Define named constants with explanations

====================
4. RECOMMENDATIONS FOR FIXES
====================

4.1 HIGH PRIORITY:
   - Fix undefined 'isec' variable access
   - Add else clause for missing timestamp file
   - Convert remaining .items() iteration to integer-based
   - Initialize all global variables with default values

4.2 MEDIUM PRIORITY:
   - Replace broad exception handling with specific exceptions
   - Add DataFrame column validation
   - Handle potential division by zero in RSI calculation
   - Clean up variable naming (time_now example)

4.3 LOW PRIORITY:
   - Remove redundant f.close() call
   - Consider using pandas merge instead of nested loops
   - Move hardcoded credentials to environment variables
   - Add constants for magic numbers

====================
5. SUMMARY
====================

Total Issues Found: 14
- Critical Logic Errors: 2
- Type/Pylance Warnings: 3  
- Performance Issues: 3
- Security Issues: 1
- Code Quality Issues: 5

The script is generally well-structured but has several areas that need attention, 
particularly around variable initialization, exception handling, and DataFrame operations.
The most critical issues are the undefined variable access and missing file handling logic.